@model EtnoSelo.App.Models.PonudaModel

<div class="panel panel-primary">
    <div class="panel-heading">Dodaj Novu Ponudu</div>
    <div class="panel-body">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @using (Html.BeginForm("DodajPonudu", "Ponude", FormMethod.Post, new { id = "frmDodajPonudu", enctype = "multipart/form-data" }))
        {
            <input type="hidden" id="Dodaj" name="Dodaj" />
            @Html.HiddenFor(x=>x.Id)

            @Html.HiddenFor(x => x.Guid)

            <div class="form-inline">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Naziv, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Naziv, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Naziv, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.VaziOd, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.VaziOd, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VaziOd, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.VaziDo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.VaziDo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VaziDo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <br />
            <div class="form-horizontal" style="margin-left:30px;">
                <hr />
                <h4>Stanbene Jedinice</h4>
                <table id="tblJedinice" width="900">
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                            <th colspan="3">Cijena bez/sa popustom</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.PonudeJedinice.Count; i++)
                        {
                            <tr>
                                <td width="40%">
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.DropDownListFor(model => model.PonudeJedinice[i].TipStanbeneJedinice, new SelectList(Model.PonudeJedinice[i].TipoviStanbenihJedinica, "Value", "Text", Model.PonudeJedinice[i].TipStanbeneJedinice), new { @class = "form-control", @onchange = "ucitajStanbeneJedinice(this)", @name = $"[{i}].TipStanbeneJedinice" })
                                            @Html.ValidationMessageFor(model => model.PonudeJedinice[i].TipStanbeneJedinice, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </td>
                                <td width="40%">
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @*@Html.DropDownListFor(model => model.PonudeJedinice[i].StanbenaJedinica, Model.PonudeJedinice[i].StanbeneJedinice.Select(x => new SelectListItem() { Text = x.Naziv, Value = x.Id.ToString() }).ToList(), new { @class = "form-control", @name = $"[{i}].StanbenaJedinica" })*@
                                            @Html.DropDownListFor(model => model.PonudeJedinice[i].StanbenaJedinica, new SelectList(Model.PonudeJedinice[i].StanbeneJedinice, "Id", "Naziv", Model.PonudeJedinice[i].StanbenaJedinica), new { @class = "form-control", @name = $"[{i}].StanbenaJedinica" })
                                            @Html.ValidationMessageFor(model => model.PonudeJedinice[i].StanbenaJedinica, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </td>

                                <td width="10%">
                                    <div class="form-group">
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.PonudeJedinice[i].CijenaBezPopusta, new { htmlAttributes = new { @class = "form-control", @onchange = "izracunajPopust()" } })
                                            @Html.ValidationMessageFor(model => model.PonudeJedinice[i].CijenaBezPopusta, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </td>

                                <td width="10%">
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.PonudeJedinice[i].CijenaSaPopustom, new { htmlAttributes = new { @class = "form-control", disabled = "" } })
                                            @Html.ValidationMessageFor(model => model.PonudeJedinice[i].CijenaSaPopustom, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </td>
                                <td>KM</td>
                                <td class="glyphicon-td" guid="@Model.PonudeJedinice[i].MyGuid">
                                    <span class="glyphicon glyphicon-remove" onclick="izbrisiRed('@Model.PonudeJedinice[i].MyGuid')"></span>
                                    @Html.HiddenFor(model => model.PonudeJedinice[i].MyGuid)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="form-group">
                    <div class="col-md-10">
                        <button type="button" id="btnDodajJedinicu" value="Dodaj Jedinicu" class="btn btn-default" onclick="dodajJedinicu()">Dodaj Jedinicu</button>
                    </div>
                </div>
                <hr />
                <h4>Ukljucene Aktivnosti</h4>
                <table width="800">
                    <thead>
                        <tr>
                            @*  <th><label class = "control-label col-md-12">Naziv Aktivnosti</label></th>*@
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.Aktivnosti.Count; i++)
                        {
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.DropDownListFor(model => model.Aktivnosti[i].Aktivnost, new SelectList(Model.Aktivnosti[i].Aktivnosti, "Value", "Text", Model.Aktivnosti[i].Aktivnost), new { @class = "form-control ddlAktivnost", @onchange = "", @name = $"[{i}].Aktivnost", @style = "min-width: 500px;" })
                                            <div class="glyphicon-td" guid="@Model.Aktivnosti[i].MyGuid"><span class="glyphicon glyphicon-remove" onclick="izbrisiRed('@Model.Aktivnosti[i].MyGuid')"></span></div>
                                            @Html.HiddenFor(model => model.Aktivnosti[i].MyGuid)
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <div class="form-group">
                    <div class="col-md-10">
                        <button type="button" id="btnDodajAktivnost" value="Dodaj Aktivnost" class="btn btn-default" onclick="dodajAktivnost()">Dodaj Aktivnost</button>
                    </div>
                </div>
                <input accept="image/*" onchange="ucitajImenaSlika()" type="file" id="slike" class="multiple" name="Slike" multiple style="display: none"/>
                <input type="button" class="btn btn-primary" onclick="dodajSlike()" value="Dodaj slike"/>
                <ul id="imenaSlika"></ul>
            </div>
            <div class="form-inline">
                <div class="form-group col-md-4" style="float: right;">
                    @Html.LabelFor(model => model.Popust, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Popust, new { htmlAttributes = new { @class = "form-control", @onchange = "izracunajPopust()" } })
                        @Html.ValidationMessageFor(model => model.Popust, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }
        <br />
        <div>
            @Html.ActionLink("Nazad", "Index", new { }, new { @class= "btn btn-default" }) 
            <a href="javascript:pregledPonude();" class= "btn btn-default">Pregled ponude</a>
        </div>
    </div>
</div>
